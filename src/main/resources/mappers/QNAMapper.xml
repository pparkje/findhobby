<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="QNAMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="QNAMap"
		type="study.spring.findhobby.model.qna">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="id" column="id" />
		<result property="q_subject" column="q_subject" />
		<result property="q_cont" column="q_cont" />
		<result property="q_m_id" column="q_m_id" />
		<result property="q_m_num" column="q_m_num" />
		<result property="q_answer_ch" column="q_answer_ch" />
		<result property="q_answer" column="q_answer" />
		<result property="q_a_id" column="q_a_id" />
		<result property="q_joindate" column="q_joindate" />
		<result property="q_updatedate" column="q_updatedate" />
		
	</resultMap>

	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem"
		parameterType="study.spring.findhobby.model.qna"
		resultMap="QNAMap">
		SELECT 
		
		id,q_subject,q_cont,q_m_id,q_m_num,q_answer_ch,q_answer,q_a_id,q_joindate,q_updatedate
		
		FROM qna 
		
		WHERE id=#{id};
		
	</select>
	
	<!-- 다중행 조회를 위한 기능 정의 => 1번부터 시작 ASC -->
	<select id="selectList"
		parameterType="study.spring.findhobby.model.qna"
		resultMap="QNAMap">
		SELECT 
		id,q_subject,q_cont,q_m_id,q_m_num,q_answer_ch,q_answer,q_a_id,q_joindate,q_updatedate
		FROM qna

		<where>
		
			<if test="q_m_id != null and q_m_id != ''">
				q_m_id LIKE concat('%', #{q_m_id}, '%') 
			</if>
			
			<if test="q_cont != null and q_cont != ''">
				q_cont LIKE concat('%', #{q_cont}, '%') 
			</if>
			
		</where>

		ORDER BY id ASC
		
		<if test="listCount > 0" >
		LIMIT #{offset}, #{listCount}
		</if>
		
	</select>
	
	<!-- 다중행 조회를 위한 기능 정의 => 거꾸로 조회 DESC(최신순) -->
	<select id="selectList_DESC"
		parameterType="study.spring.findhobby.model.qna"
		resultMap="QNAMap">
		SELECT 
		id,q_subject,q_cont,q_m_id,q_m_num,q_answer_ch,q_answer,q_a_id,q_joindate,q_updatedate
		FROM qna

		<where>
		
			<if test="q_m_id != null and q_m_id != ''">
				q_m_id LIKE concat('%', #{q_m_id}, '%') 
			</if>
			
			<if test="q_cont != null and q_cont != ''">
				q_cont LIKE concat('%', #{q_cont}, '%') 
			</if>
			
		</where>

		ORDER BY id DESC
		
		<if test="listCount > 0" >
		LIMIT #{offset}, #{listCount}
		</if>
		
	</select>
	
	
	
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="study.spring.findhobby.model.qna"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO qna 
		(
		
		q_subject,q_cont,q_m_id,q_m_num,q_answer_ch,q_answer,q_a_id,q_joindate,q_updatedate
		
		) 
		VALUES 
		(
		
		#{q_subject},#{q_cont},#{q_m_id},#{q_m_num}, 'N' , NULL ,'운영자AhAh',now(),now()
		
		);
	</insert>
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="study.spring.findhobby.model.qna">
		DELETE FROM qna WHERE id=#{id};
	</delete>
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="study.spring.findhobby.model.qna">
		
		UPDATE qna SET  
		
		q_subject=#{q_subject},
		q_cont=#{q_cont},
		q_m_id=#{q_m_id},
		q_m_num=#{q_m_num},
		q_answer=#{q_answer},
		
		<if test="q_answer_ch != null and q_answer_ch != ''">
			q_answer_ch=#{q_answer_ch},
		</if>
		
		q_a_id=#{q_a_id},
		q_updatedate=now()
		
		WHERE id=#{id};
		
	</update>
	<!-- 조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다. count , max , min , sum , avg 함수를 
		사용한 경우 Mapper 에서는 resultMap이 아닌 resultType 으로 반환한다. -->
	<!-- 데이터 수 조회하기 -->
	<select id="selectCountAll"
		parameterType="study.spring.findhobby.model.qna"
		resultType="int">
		SELECT COUNT(*) FROM qna

		<where>
		
			<if test="q_cont != null and q_cont != ''">
				q_cont LIKE concat('%', #{q_cont}, '%') 
			</if>
			
		</where>
		
	</select>
	
	<!-- 관리자 페이지 -->
	<!-- 다중행 조회를 위한 기능 정의 => 1번부터 시작 ASC -->
	<select id="selectList_master"
		parameterType="study.spring.findhobby.model.qna"
		resultMap="QNAMap">
		SELECT 
		id,q_subject,q_cont,q_m_id,q_m_num,q_answer_ch,q_answer,q_a_id,q_joindate,q_updatedate
		FROM qna

		<where>
		
			<if test="q_subject != null and q_subject != ''
			and q_cont != null and q_cont != ''
			and q_m_id != null and q_m_id != ''
			and q_answer != null and q_answer != ''
			and q_a_id != null and q_a_id != '' ">
			q_subject LIKE concat('%', #{q_subject}, '%') OR q_cont LIKE concat('%', #{q_cont}, '%') OR q_m_id LIKE concat('%', #{q_m_id}, '%') OR q_answer LIKE concat('%', #{q_answer}, '%') OR q_a_id LIKE concat('%', #{q_a_id}, '%') 
				
			</if>
			
		</where>

		ORDER BY id ASC
		
		<if test="listCount > 0" >
		LIMIT #{offset}, #{listCount}
		</if>
		
	</select>
	
	<select id="selectCountAll_master"
		parameterType="study.spring.findhobby.model.qna"
		resultType="int">
		SELECT COUNT(*) FROM qna

		<where>
		
			<if test="q_subject != null and q_subject != ''
			and q_cont != null and q_cont != ''
			and q_m_id != null and q_m_id != ''
			and q_answer != null and q_answer != ''
			and q_a_id != null and q_a_id != ''
			">
				q_subject LIKE concat('%', #{q_subject}, '%') OR q_cont LIKE concat('%', #{q_cont}, '%') OR q_m_id LIKE concat('%', #{q_m_id}, '%') OR q_answer LIKE concat('%', #{q_answer}, '%') OR q_a_id LIKE concat('%', #{q_a_id}, '%')
				
			</if>
			
		</where>
		
	</select>

</mapper>